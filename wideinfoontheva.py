# -*- coding: utf-8 -*-
"""WideinfoontheVA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ivyFgsvH8EsIX5HFgOHE7mXRqnULOK6e

# Importing the Datas
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df_2021=pd.read_csv('/content/df_VA_2021 (1).csv')
df_2022=pd.read_csv('/content/df_VA_2022.csv')

df_2021

df_2021 = df_2021.drop_duplicates()
df_2021 = df_2021.drop(index=7275)
row_data = {
    'hour': 3,
    'date': 28,
    'month': 3,'year' : 2021, 'values': df_2021[(df_2021['hour'] == 2) & (df_2021['date'] == 28) & (df_2021['month'] == 3)].iloc[0]['values']
}
df_2021['date']=df_2021['date'].astype(int)
df_2021['month']=df_2021['month'].astype(int)
df_2021['hour']=df_2021['hour'].astype(int)
df_2021 = df_2021.append(row_data, ignore_index=True)
df_2021 = df_2021.sort_values(by=['month', 'date', 'hour'])
df_2021 = df_2021.reset_index(drop=True)
df_2021

df_2022

"""# Naming a new column of the day of the week"""

df_2021['day'] = ''
a=['Friday','Saturday','Sunday','Monday','Tuesday','Wednesday','Thrusday']
for i in range (0,365):
  for j in range (0,24):
    df_2021['day'].iloc[((24*i)+j)]=a[i%7]
df_2021

df_2022['day'] = ''
a=['Saturday','Sunday','Monday','Tuesday','Wednesday','Thrusday','Friday']
for i in range (0,365):
  for j in range (0,24):
    df_2022['day'].iloc[((24*i)+j)]=a[i%7]
df_2022

"""# Ploting the graphs"""

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages

a = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']

# Initialize a PdfPages object to save plots
with PdfPages('multiple_plots_VA_2021.pdf') as pdf:
    a=['Monday','Tuesday','Wednesday','Thrusday','Friday','Saturday','Sunday']
    for i in range (1,13):
      fig, axs = plt.subplots(2, 4, figsize=(15, 10))
      for j in range (0,7):
        df_temp = df_2021[(df_2021['month'] == i) & (df_2021['day'] == a[j])]
        df_temp = df_temp.reset_index(drop=True)
        x_labels=df_temp['hour'][0:24]
        y_labels1=df_temp['values'][0:24]
        y_labels2=df_temp['values'][24:48]
        y_labels3=df_temp['values'][48:72]
        y_labels4=df_temp['values'][72:96]
        plt.plot(x_labels,y_labels1,label=f"{df_temp['date'].iloc[0]}")
        plt.plot(x_labels,y_labels2,label=f"{df_temp['date'].iloc[24]}")
        plt.plot(x_labels,y_labels3,label=f"{df_temp['date'].iloc[48]}")
        plt.plot(x_labels,y_labels4,label=f"{df_temp['date'].iloc[72]}")
        plt.xlabel('hours')
        plt.ylabel('values')
        plt.title(f"Day: {a[j]}, Month :{df_temp['month'].iloc[0]} ")
        plt.legend(loc='upper right',fontsize='small')
        plt.subplot(2, 4, (j+1))
      plt.tight_layout()
      pdf.savefig()
      plt.plot()
      plt.close()

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages

# Initialize a PdfPages object to save plots
with PdfPages('multiple_plots_VA_2022.pdf') as pdf:
    a=['Monday','Tuesday','Wednesday','Thrusday','Friday','Saturday','Sunday']
    for i in range (1,13):
      fig, axs = plt.subplots(2, 4, figsize=(15, 10))
      for j in range (0,7):
        df_temp = df_2022[(df_2022['month'] == i) & (df_2022['day'] == a[j])]
        df_temp = df_temp.reset_index(drop=True)
        x_labels=df_temp['hour'][0:24]
        y_labels1=df_temp['values'][0:24]
        y_labels2=df_temp['values'][24:48]
        y_labels3=df_temp['values'][48:72]
        y_labels4=df_temp['values'][72:96]
        plt.plot(x_labels,y_labels1,label=f"{df_temp['date'].iloc[0]}")
        plt.plot(x_labels,y_labels2,label=f"{df_temp['date'].iloc[24]}")
        plt.plot(x_labels,y_labels3,label=f"{df_temp['date'].iloc[48]}")
        plt.plot(x_labels,y_labels4,label=f"{df_temp['date'].iloc[72]}")
        plt.xlabel('hours')
        plt.ylabel('values')
        plt.title(f"Day: {a[j]}, Month :{df_temp['month'].iloc[0]} ")
        plt.legend(loc='upper right',fontsize='small')
        plt.subplot(2, 4, (j+1))
      plt.tight_layout()
      pdf.savefig()
      plt.plot()
      plt.close()

