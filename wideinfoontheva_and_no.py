# -*- coding: utf-8 -*-
"""WideinfoontheVA and NO.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ivyFgsvH8EsIX5HFgOHE7mXRqnULOK6e

# Importing the Datas

# We have to combine the graphs for the 2 years so, like for 2 years , there will be (12*7)=(84) graphs
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df_2021=pd.read_csv('/content/df_VA_2021 (1).csv')
df_2022=pd.read_csv('/content/df_VA_2022.csv')

df_2021

print(type(df_2021))

df_2021 = df_2021.drop_duplicates()
df_2021 = df_2021.drop(index=7275)
row_data = {
    'hour': 3,
    'date': 28,
    'month': 3,'year' : 2021, 'values': (df_2021[(df_2021['hour'] == 2) & (df_2021['date'] == 28) & (df_2021['month'] == 3)].iloc[0]['values'])
}
df_2021['date']=df_2021['date'].astype(int)
df_2021['month']=df_2021['month'].astype(int)
df_2021['hour']=df_2021['hour'].astype(int)
row_data_df = pd.DataFrame.from_dict([row_data])
df_2021 = pd.concat([df_2021,row_data_df])
df_2021 = df_2021.sort_values(by=['month', 'date', 'hour'])
df_2021 = df_2021.reset_index(drop=True)
df_2021

df_2022

"""# Naming a new column of the day of the week"""

df_2021['day'] = ''
a=['Friday','Saturday','Sunday','Monday','Tuesday','Wednesday','Thrusday']
for i in range (0,365):
  for j in range (0,24):
    x=((24*i)+j)
    df_2021.loc[x,'day']=a[i%7]
df_2021

df_2022['day'] = ''
a=['Saturday','Sunday','Monday','Tuesday','Wednesday','Thrusday','Friday']
for i in range (0,365):
  for j in range (0,24):
    df_2022.loc[((24*i)+j),'day']=a[i%7]
df_2022

"""# Ploting the graphs"""

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages

a = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']

# Initialize a PdfPages object to save plots
with PdfPages('multiple_plots_VA_2021.pdf') as pdf:
    a=['Monday','Tuesday','Wednesday','Thrusday','Friday','Saturday','Sunday']
    for i in range (1,13):
      fig, axs = plt.subplots(2, 4, figsize=(15, 10))
      for j in range (0,7):
        df_temp2 = df_2022[(df_2022['month'] == i) & (df_2022['day'] == a[j])]
        df_temp2 = df_temp2.reset_index(drop=True)
        x_labels=df_temp2['hour'][0:24]
        y_labels5=df_temp2['values'][0:24]
        y_labels6=df_temp2['values'][24:48]
        y_labels7=df_temp2['values'][48:72]
        y_labels8=df_temp2['values'][72:96]
        df_temp1 = df_2021[(df_2021['month'] == i) & (df_2021['day'] == a[j])]
        df_temp1 = df_temp1.reset_index(drop=True)
        y_labels1=df_temp1['values'][0:24]
        y_labels2=df_temp1['values'][24:48]
        y_labels3=df_temp1['values'][48:72]
        y_labels4=df_temp1['values'][72:96]
        plt.plot(x_labels,y_labels1,label=f"{df_temp1.loc[0,'date']} 2021")
        plt.plot(x_labels,y_labels2,label=f"{df_temp1.loc[24,'date']} 2021")
        plt.plot(x_labels,y_labels3,label=f"{df_temp1.loc[48,'date']} 2021")
        plt.plot(x_labels,y_labels4,label=f"{df_temp1.loc[72,'date']} 2021")
        plt.plot(x_labels,y_labels5,label=f"{df_temp2.loc[0,'date']} 2022")
        plt.plot(x_labels,y_labels6,label=f"{df_temp2.loc[24,'date']} 2022")
        plt.plot(x_labels,y_labels7,label=f"{df_temp2.loc[48,'date']} 2022")
        plt.plot(x_labels,y_labels8,label=f"{df_temp2.loc[72,'date']} 2022")
        plt.xlabel('hours')
        plt.ylabel('values')
        plt.title(f"Day: {a[j]}, Month :{df_temp1.loc[0,'month']} ")
        plt.legend(loc='upper right',fontsize='small')
        plt.subplot(2, 4, (j+1))
      plt.tight_layout()
      pdf.savefig()
      plt.plot()
      plt.close()

"""# Importing the DK1 files"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
df_2021=pd.read_csv('/content/DK1_2021.csv')
df_2022=pd.read_csv('/content/DK1_2022.csv')
df_2021

"""# Alloting the day of the year"""

def allote_2021(df_2021):
    df_2021['day'] = ''
    a = ['Friday', 'Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday']
    for i in range(0, 365):
        for j in range(0, 24):
            df_2021.loc[((24 * i) + j), 'day'] = a[i % 7]
    return df_2021

# Assuming df_2021 is already defined somewhere
df_2021 = allote_2021(df_2021)

def allote_2022(df_2022):
    df_2022['day'] = ''
    a = ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']
    for i in range(0, 365):
        for j in range(0, 24):
            df_2022.loc[((24 * i) + j), 'day'] = a[i % 7]
    return df_2022
df_2022 = allote_2022(df_2022)

df_2022

df_2021

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
def make_graph(df_2022,df_2021,name):
  with PdfPages(f'{name}') as pdf:
      a=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']
      for i in range (1,13):
        fig, axs = plt.subplots(2, 4, figsize=(15, 10))
        for j in range (0,7):
          df_temp2 = df_2022[(df_2022['month'] == i) & (df_2022['day'] == a[j])]
          df_temp2 = df_temp2.reset_index(drop=True)
          x_labels=df_temp2['hour'][0:24]
          y_labels5=df_temp2['values'][0:24]
          y_labels6=df_temp2['values'][24:48]
          y_labels7=df_temp2['values'][48:72]
          y_labels8=df_temp2['values'][72:96]
          df_temp1 = df_2021[(df_2021['month'] == i) & (df_2021['day'] == a[j])]
          df_temp1 = df_temp1.reset_index(drop=True)
          y_labels1=df_temp1['values'][0:24]
          y_labels2=df_temp1['values'][24:48]
          y_labels3=df_temp1['values'][48:72]
          y_labels4=df_temp1['values'][72:96]
          plt.plot(x_labels,y_labels1,label=f"{df_temp1.loc[0,'date']} 2021")
          plt.plot(x_labels,y_labels2,label=f"{df_temp1.loc[24,'date']} 2021")
          plt.plot(x_labels,y_labels3,label=f"{df_temp1.loc[48,'date']} 2021")
          plt.plot(x_labels,y_labels4,label=f"{df_temp1.loc[72,'date']} 2021")
          plt.plot(x_labels,y_labels5,label=f"{df_temp2.loc[0,'date']} 2022")
          plt.plot(x_labels,y_labels6,label=f"{df_temp2.loc[24,'date']} 2022")
          plt.plot(x_labels,y_labels7,label=f"{df_temp2.loc[48,'date']} 2022")
          plt.plot(x_labels,y_labels8,label=f"{df_temp2.loc[72,'date']} 2022")
          plt.xlabel('hours')
          plt.ylabel('values')
          plt.title(f"Day: {a[j]}, Month :{df_temp1.loc[0,'month']} ")
          plt.legend(loc='upper right',fontsize='small')
          plt.subplot(2, 4, (j+1))
        plt.tight_layout()
        pdf.savefig()
        plt.plot()
        plt.show()
        plt.close()
df_2021.rename(columns={'TotalLoad': 'values'}, inplace=True)
df_2022.rename(columns={'TotalLoad': 'values'}, inplace=True)
make_graph(df_2022,df_2021,"DK1.pdf")

"""# DK2"""

df_2021=pd.read_csv('/content/DK2_2021.csv')
df_2022=pd.read_csv('/content/DK2_2022.csv')
df_2021=allote_2021(df_2021)
df_2022=allote_2022(df_2022)
df_2021.rename(columns={'TotalLoad': 'values'}, inplace=True)
df_2022.rename(columns={'TotalLoad': 'values'}, inplace=True)
make_graph(df_2022,df_2021,'DK2.pdf')

"""# NO"""

df_2021=pd.read_csv('/content/df_NO_2021.csv')
df_2022=pd.read_csv('/content/df_NO_2022.csv')
df_2021=allote_2021(df_2021)
df_2022=allote_2022(df_2022)
make_graph(df_2022,df_2021,'NO.pdf')